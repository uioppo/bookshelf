<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

<!--	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
  		<property name="jdbcUrl" value="jdbc:mysql://192.168.101.144:3306/bookshelf_db" />
  		<property name="user" value="hcctech" />
  		<property name="password" value="123456" />
    		
	<property name="minPoolSize" value="20" />
		<property name="maxPoolSize" value="80" />
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="2" />
		<property name="maxStatements" value="20" />
		<property name="initialPoolSize" value="30" />
		<property name="idleConnectionTestPeriod" value="1800" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="true" />		
	</bean>
-->
	<bean id= "dataSource" class ="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
        	<!--  
    		<property name="url" value="jdbc:mysql://192.168.101.144:3306/bookshelf_db" />
        	<property name="username" value="hcctech" />
        	<property name="password" value="123456" />
        	-->
        	<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/bookshelf_db" />
			<property name="user" value="root" />
			<property name="password" value="root" />
        	<!--连接池启动时的初始化 -->
        	<property name="initialSize" value="10" />
        	<!--连接池的最大值 -->
        	<property name="maxActive" value="80" />
        	<!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的链接慢慢释放一部分，一直减少到 maxle为止 -->
        	<property name="maxIdle" value="20" />
        	<!-- 最小空闲值，当空闲的连接数少于阀值时，连接池就会预申请去一些链接，以免洪峰来时来不及申请 -->
        	<property name="minIdle" value="10" />
			
			<!--Added&Modified By Chao Wang Start-->
        	<!-- 运行判断连接超时任务线程的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
        	<property name="timeBetweenEvictionRunsMillis" value="10000" />
        	<!-- 连接池的某个连接在时间段内一直空闲，被逐出连接池的超时时间，默认为30分钟=1000 * 60 * 30 -->
        	<property name="minEvictableIdleTimeMillis" value="180000" />
			<property name="removeAbandoned" value="true" />
			<property name="removeAbandonedTimeout" value="60" />
			<property name="logAbandoned" value="true" />
			<property name="validationQuery" value="select 1 " />
			<property name="testOnBorrow" value="true" />  
            <property name="testOnReturn" value="true" />
            <property name="testWhileIdle" value="true" />		
			<!--Added&Modified By Chao Wang End-->
			
	</bean>  

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>
					com/hcctech/bookshelf/pojo/BsUserInfo.hbm.xml
				</value>
				<value>com/hcctech/bookshelf/pojo/BsFlow.hbm.xml</value>
				<value>com/hcctech/bookshelf/pojo/BsLog.hbm.xml</value>
				<value>
					com/hcctech/bookshelf/pojo/BsFunction.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsOrderProduct.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsUserDrm.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsDictionary.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsAdminUser.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsOrder.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsSellSetting.hbm.xml
				</value>
				<value>com/hcctech/bookshelf/pojo/BsArea.hbm.xml</value>
				<value>
					com/hcctech/bookshelf/pojo/BsProducts.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsReader.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsLicenseBatch.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsMybook.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsSchool.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsLicenseKey.hbm.xml
				</value>
				<value>
					com/hcctech/bookshelf/pojo/BsWebUser.hbm.xml
				</value>
				<value>com/hcctech/bookshelf/pojo/BsRole.hbm.xml</value>
				<value>
					com/hcctech/bookshelf/pojo/BsEbook.hbm.xml
				</value></list>
		</property></bean>
	<!-- 发邮件 start -->
		<!-- 属性文件加载 -->
		<bean id="propertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:email.properties</value>
				</list>
			</property>
		</bean>
		<bean id="velocityEngine"
			class="org.springframework.ui.velocity.VelocityEngineFactoryBean"
			scope="prototype">
			<property name="velocityProperties">
				<value>
					resource.loader=class
					class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
					input.encoding=UTF-8
					output.encoding=UTF-8
					default.contentType=text/html;charset=UTF-8
	         </value>
			</property>
		</bean>
		<bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"
			scope="prototype">
			<property name="host" value="${email.host}"></property>
			<property name="javaMailProperties">
				<value>
					mail.smtp.auth=${mail.smtp.auth}
				</value>
			</property>
			<property name="password" value="${email.password}"></property>
			<property name="username" value="${email.username}"></property>
		</bean>
		<bean name="thirdVelocityEmailUtil" class="com.hcctech.bookshelf.util.ThirdVelocityEmailUtil"
			scope="prototype">
			<property name="mailSender" ref="mailSender"></property>
			<property name="velocityEngine" ref="velocityEngine"></property>
			<property name="fromMail" value="${email.fromMail}"></property>
		</bean>
	<!-- 发邮件 end -->
	<!-- 生成首页 start-->
		<bean name="thirdVelocityHtmlUtil" class="com.hcctech.bookshelf.util.ThirdVelocityHtmlUtil"
			scope="prototype">
			<property name="velocityEngine" ref="velocityEngine"></property>
		</bean>
	<!-- 生成首页end -->
	<!-- 事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
